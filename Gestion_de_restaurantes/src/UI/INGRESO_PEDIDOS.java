/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author Usuario
 */
public class INGRESO_PEDIDOS extends javax.swing.JFrame {

    DefaultTableModel modelo3 = new DefaultTableModel();

    /**
     * Creates new form INGRESO_PEDIDOS
     */
    public INGRESO_PEDIDOS() {
        initComponents();
        modelo3.addColumn("ID CLIENTE");
        modelo3.addColumn("MESA");
        modelo3.addColumn("N° ASIENTOS");
        modelo3.addColumn("MENÚ");
        modelo3.addColumn("PRECIO UNI.");
        modelo3.addColumn("CANTIDAD");
        modelo3.addColumn("TOTAL");
        modelo3.addColumn("DETALLE");
        TablaIngresoDePedidos.setModel(modelo3);
        cargarPedidosDesdeCSV();
        // Agregar el evento para detectar clics en las filas
        TablaIngresoDePedidos.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int filaSeleccionada = TablaIngresoDePedidos.getSelectedRow();
                if (filaSeleccionada >= 0) {
                    // Obtener los valores de la fila seleccionada y colocarlos en los campos de texto
                    txtCliente.setText(modelo3.getValueAt(filaSeleccionada, 0).toString());
                    jComboBoxNumDeMesa.setSelectedItem(modelo3.getValueAt(filaSeleccionada, 1).toString());
                    jComboBoxNumDeSillas.setSelectedItem(modelo3.getValueAt(filaSeleccionada, 2).toString());
                    txtNombreDelPlato.setText(modelo3.getValueAt(filaSeleccionada, 3).toString());
                    txtNumDePlato.setText(modelo3.getValueAt(filaSeleccionada, 5).toString());
                    TextAreaDetalleDelPlato.setText(modelo3.getValueAt(filaSeleccionada, 7).toString());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxNumDeMesa = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxNumDeSillas = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtNombreDelPlato = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNumDePlato = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevoPedido = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaDetalleDelPlato = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaIngresoDePedidos = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("ID DEL CLIENTE:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        jPanel1.add(txtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 170, 40));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("N° MESA:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jComboBoxNumDeMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SIN MESA", "MESA 1", "MESA 2", "MESA 3", "MESA 4", "MESA 5", "MESA 6" }));
        jComboBoxNumDeMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNumDeMesaActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxNumDeMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 170, 40));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("N° ASIENTOS:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jComboBoxNumDeSillas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SIN ASIENTOS", "1", "2", "3", "4", "5", "6", "7", "8" }));
        jPanel1.add(jComboBoxNumDeSillas, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 170, 40));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("NOMBRE DEL PLATO:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));
        jPanel1.add(txtNombreDelPlato, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 170, 40));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("N° PLATOS:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));
        jPanel1.add(txtNumDePlato, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 170, 40));

        btnRegistrar.setBackground(new java.awt.Color(255, 153, 0));
        btnRegistrar.setForeground(new java.awt.Color(0, 0, 0));
        btnRegistrar.setText("REGISTRAR");
        btnRegistrar.setBorder(null);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseExited(evt);
            }
        });
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 110, 50));

        btnAgregar.setBackground(new java.awt.Color(255, 153, 0));
        btnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar.setText("AGREGAR");
        btnAgregar.setBorder(null);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAgregarMouseExited(evt);
            }
        });
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 110, 50));

        btnEditar.setBackground(new java.awt.Color(255, 153, 0));
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setText("EDITAR");
        btnEditar.setBorder(null);
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditarMouseExited(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 110, 50));

        btnEliminar.setBackground(new java.awt.Color(255, 153, 0));
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setBorder(null);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 110, 50));

        btnNuevoPedido.setBackground(new java.awt.Color(255, 153, 0));
        btnNuevoPedido.setForeground(new java.awt.Color(0, 0, 0));
        btnNuevoPedido.setText("NUEVO PEDIDO");
        btnNuevoPedido.setBorder(null);
        btnNuevoPedido.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevoPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNuevoPedidoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNuevoPedidoMouseExited(evt);
            }
        });
        btnNuevoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPedidoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevoPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 110, 50));

        btnSalir.setBackground(java.awt.Color.gray);
        btnSalir.setForeground(new java.awt.Color(0, 0, 0));
        btnSalir.setText("SALIR");
        btnSalir.setBorder(null);
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalirMouseExited(evt);
            }
        });
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 110, 50));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("DETALLES DEL PEDIDO (OPCIONAL):");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        TextAreaDetalleDelPlato.setColumns(20);
        TextAreaDetalleDelPlato.setRows(5);
        jScrollPane2.setViewportView(TextAreaDetalleDelPlato);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 276, 290, 70));

        TablaIngresoDePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID CLIENTE", "MESA", "N° ASIENTOS", "MENÚ", "PRECIO UNI.", "CANTIDAD", "TOTAL", "DETALLE"
            }
        ));
        jScrollPane1.setViewportView(TablaIngresoDePedidos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 680, 160));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("INGRESO DE PEDIDOS");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 240, 30));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 240, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

        if (validarIDCliente(txtCliente.getText().trim()) && validarNombreDelPlato(txtNombreDelPlato.getText().trim()) && validarNumeroDePlatos(txtNumDePlato.getText().trim()) && validarDetallesDelPedido(TextAreaDetalleDelPlato.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Pedido registrado con éxito.");
        } else {
            JOptionPane.showMessageDialog(this, "Debe insertar datos correctos");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    public static boolean validarIDCliente(String datos) {
        return datos.matches("^[A-Z]{3}\\d{3,}$");
    }

    public static boolean validarNombreDelPlato(String datos) {
        return datos.matches("^[a-zA-ZÀ-ÿ\\s]{3,30}$");
    }

    public static boolean validarNumeroDePlatos(String datos) {
        return datos.matches("^\\d{1,2}$");
    }

    public static boolean validarDetallesDelPedido(String datos) {
        return datos.matches("^[a-zA-Z0-9À-ÿ\\s,.-]{5,200}$");
    }


    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        MENU_PRICIPAL mMENU_PRICIPAL = new MENU_PRICIPAL();
        mMENU_PRICIPAL.setVisible(true);
        mMENU_PRICIPAL.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String idcliente = txtCliente.getText();
        String mesa = jComboBoxNumDeMesa.getSelectedItem().toString();
        String silla = jComboBoxNumDeSillas.getSelectedItem().toString();
        String nombrePlato = txtNombreDelPlato.getText();
        String cantidadplato = txtNumDePlato.getText();
        String detalle = TextAreaDetalleDelPlato.getText();

        if (idcliente.isEmpty() || mesa.equals("SIN MESA") || silla.equals("SIN MESA") || nombrePlato.isEmpty() || cantidadplato.isEmpty() || detalle.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar completos");
        } else {
            // Buscar el precio del plato
            String precioUni = buscarPrecioPorNombrePlato(nombrePlato);

            if (precioUni != null) {
                // Calcular el total (cantidad * precio unitario)
                int cantidad = Integer.parseInt(cantidadplato);
                double precio = Double.parseDouble(precioUni);
                double total = cantidad * precio;

                // Agregar la fila a la tabla (con el precio unitario y total)
                modelo3.addRow(new Object[]{idcliente, mesa, silla, nombrePlato, precioUni, cantidadplato, total, detalle});
                guardarPedidosEnCSV(); // Guardar la tabla actualizada en CSV
            } else {
                JOptionPane.showMessageDialog(this, "Plato no encontrado.");
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = TablaIngresoDePedidos.getSelectedRow();
        if (filaSeleccionada != -1) {
            modelo3.removeRow(filaSeleccionada);
            guardarPedidosEnCSV();
        } else {
            // Mostrar mensaje de error o advertencia
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPedidoActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoPedidoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int filaSeleccionada = TablaIngresoDePedidos.getSelectedRow();
        if (filaSeleccionada != -1) {
            // Obtener el nombre del plato para buscar el precio
            String nombrePlato = txtNombreDelPlato.getText();
            String precioPlato = buscarPrecioPorNombrePlato(nombrePlato);

            if (precioPlato != null) {
                // Obtener la cantidad del plato
                int cantidad = Integer.parseInt(txtNumDePlato.getText());
                double precio = Double.parseDouble(precioPlato);
                double total = cantidad * precio;

                // Actualizar los datos en la fila seleccionada
                modelo3.setValueAt(txtCliente.getText(), filaSeleccionada, 0); // Cliente
                modelo3.setValueAt(jComboBoxNumDeMesa.getSelectedItem().toString(), filaSeleccionada, 1); // Mesa
                modelo3.setValueAt(jComboBoxNumDeSillas.getSelectedItem().toString(), filaSeleccionada, 2); // Silla
                modelo3.setValueAt(nombrePlato, filaSeleccionada, 3); // Nombre del plato
                modelo3.setValueAt(precioPlato, filaSeleccionada, 4); // Precio unitario
                modelo3.setValueAt(txtNumDePlato.getText(), filaSeleccionada, 5); // Cantidad de platos
                modelo3.setValueAt(total, filaSeleccionada, 6); // Total
                modelo3.setValueAt(TextAreaDetalleDelPlato.getText(), filaSeleccionada, 7); // Detalle

                // Guardar los pedidos en el archivo CSV después de editar
                guardarPedidosEnCSV();
            } else {
                JOptionPane.showMessageDialog(this, "Plato no encontrado.");
            }
        } else {
            // Mostrar mensaje de error o advertencia
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para editar.");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jComboBoxNumDeMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNumDeMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNumDeMesaActionPerformed

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed

    private void btnSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseEntered
        btnSalir.setBackground(new Color(255, 153, 153));
    }//GEN-LAST:event_btnSalirMouseEntered

    private void btnSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseExited
        btnSalir.setBackground(Color.gray);
    }//GEN-LAST:event_btnSalirMouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnNuevoPedidoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoPedidoMouseEntered
        btnNuevoPedido.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnNuevoPedidoMouseEntered

    private void btnRegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseEntered
        btnRegistrar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnRegistrarMouseEntered

    private void btnAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseEntered
        btnAgregar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnAgregarMouseEntered

    private void btnEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseEntered
        btnEditar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnEditarMouseEntered

    private void btnNuevoPedidoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoPedidoMouseExited
        btnNuevoPedido.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnNuevoPedidoMouseExited

    private void btnRegistrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseExited
        btnRegistrar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnRegistrarMouseExited

    private void btnAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseExited
        btnAgregar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnAgregarMouseExited

    private void btnEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseExited
        btnEditar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnEditarMouseExited

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnEliminarMouseExited

    private String buscarPrecioPorNombrePlato(String nombrePlato) {
        String line;
        try (BufferedReader br = new BufferedReader(new FileReader("Menu.csv"))) {
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                // En el CSV, la posición 1 es el nombre del plato, y el 3 es el precio del plato
                if (data[1].equalsIgnoreCase(nombrePlato)) {
                    return data[3]; // Retorna el precio del plato
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null; // Retorna null si no se encontró el plato
    }

    private void guardarPedidosEnCSV() {
        try (PrintWriter pw = new PrintWriter(new File("Pedidos.csv"))) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < modelo3.getRowCount(); i++) {
                for (int j = 0; j < modelo3.getColumnCount(); j++) {
                    sb.append(modelo3.getValueAt(i, j).toString());
                    sb.append(",");
                }
                sb.append("\n");
            }
            pw.write(sb.toString());
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    // Método para cargar los datos desde un archivo CSV
    private void cargarPedidosDesdeCSV() {
        String line;
        try (BufferedReader br = new BufferedReader(new FileReader("Pedidos.csv"))) {
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                modelo3.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void limpiarCampos() {
        txtCliente.setText("");
        jComboBoxNumDeMesa.setSelectedIndex(0);
        jComboBoxNumDeSillas.setSelectedIndex(0);
        txtNombreDelPlato.setText("");
        txtNumDePlato.setText("");
        TextAreaDetalleDelPlato.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(INGRESO_PEDIDOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(INGRESO_PEDIDOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(INGRESO_PEDIDOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(INGRESO_PEDIDOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new INGRESO_PEDIDOS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaIngresoDePedidos;
    private javax.swing.JTextArea TextAreaDetalleDelPlato;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevoPedido;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> jComboBoxNumDeMesa;
    private javax.swing.JComboBox<String> jComboBoxNumDeSillas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtNombreDelPlato;
    private javax.swing.JTextField txtNumDePlato;
    // End of variables declaration//GEN-END:variables
}
