/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import PatronesDeDiseño.Singleton;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;

import PatronesDeDiseño.ClienteAdapter;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.HashSet;

/**
 *
 * @author Usuario
 */
public class REGISTRO_CLIENTES extends javax.swing.JFrame {

    // Declaración de HashSet
private DefaultTableModel model;
private HashSet<String> s_idsClientes = new HashSet<>();
private HashSet<String> s_correosClientes = new HashSet<>();
private HashSet<String> s_telefonoSet = new HashSet<>();
ClienteAdapter clienteAdapter;
    Connection conet;
    Statement st;
    ResultSet rs;
    

    /**
     * Creates new form REGISTRO_CLIENTES
     */
    public REGISTRO_CLIENTES() {
    initComponents();
    
    // Inicializar el modelo de tabla con las columnas desde el inicio
    model = new DefaultTableModel(new String[]{"ID", "Nombre", "Correo", "Dirección", "Teléfono"}, 0);
    
    // Asignar el modelo a la tabla directamente
    TablaDeRegistro.setModel(model);

    // Inicializar conjuntos de validación
    s_idsClientes = new HashSet<>();
    s_correosClientes = new HashSet<>();
    s_telefonoSet = new HashSet<>();
    
    clienteAdapter = new ClienteAdapter(model);
    ConsultarCliente();
    
        // Agregar el evento para detectar clics en las filas
        TablaDeRegistro.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int filaSeleccionada = TablaDeRegistro.getSelectedRow();
                if (filaSeleccionada >= 0) {
                    // Obtener los valores de la fila seleccionada y colocarlos en los campos de texto
                    txtIdCLiente.setText(model.getValueAt(filaSeleccionada, 0).toString());
                    txtNombreCliente.setText(model.getValueAt(filaSeleccionada, 1).toString());
                    txtCorreo.setText(model.getValueAt(filaSeleccionada, 2).toString());
                    txtDireccion.setText(model.getValueAt(filaSeleccionada, 3).toString());
                    txtTelefono.setText(model.getValueAt(filaSeleccionada, 4).toString());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaDeRegistro = new javax.swing.JTable();
        txtIdCLiente = new javax.swing.JTextField();
        txtNombreCliente = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevoCliente = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setText("ID DEL CLIENTE:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("REGISTRO DE CLIENTES");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, 30));

        jLabel2.setText("NOMBRE DEL CLIENTE:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 30));

        jLabel8.setText("CORREO ELECTRONICO:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 150, 40));

        jLabel3.setText("DIRECCIÓN:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, 40));

        jLabel4.setText("TELÉFONO:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, 40));

        TablaDeRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "GMAIL", "DIRECCION", "TELEFONO"
            }
        ));
        jScrollPane2.setViewportView(TablaDeRegistro);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 690, 200));

        txtIdCLiente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel1.add(txtIdCLiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 174, 40));
        jPanel1.add(txtNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 174, 40));

        txtCorreo.setToolTipText("");
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 174, 40));

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 174, 40));
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 174, 40));

        btnRegistrar.setBackground(new java.awt.Color(255, 153, 0));
        btnRegistrar.setText("REGISTRAR");
        btnRegistrar.setBorder(null);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseExited(evt);
            }
        });
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 110, 50));

        btnAgregar.setBackground(new java.awt.Color(255, 153, 0));
        btnAgregar.setText("AGREGAR");
        btnAgregar.setBorder(null);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAgregarMouseExited(evt);
            }
        });
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 110, 50));

        btnEditar.setBackground(new java.awt.Color(255, 153, 0));
        btnEditar.setText("EDITAR");
        btnEditar.setBorder(null);
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditarMouseExited(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 110, 50));

        btnEliminar.setBackground(new java.awt.Color(255, 153, 0));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setBorder(null);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 110, 50));

        btnNuevoCliente.setBackground(new java.awt.Color(255, 153, 0));
        btnNuevoCliente.setText("NUEVO CLIENTE");
        btnNuevoCliente.setBorder(null);
        btnNuevoCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNuevoClienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNuevoClienteMouseExited(evt);
            }
        });
        btnNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoClienteActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, 110, 50));

        btnSalir.setBackground(java.awt.Color.gray);
        btnSalir.setText("SALIR");
        btnSalir.setBorder(null);
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalirMouseExited(evt);
            }
        });
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 110, 50));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 250, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Escoger una fila de la tabla para luego escribir en los campos y poder editar después
    int filaSeleccionada = TablaDeRegistro.getSelectedRow();

    if (filaSeleccionada >= 0) {
        // Obtener los valores actuales de los campos de texto
        String s_id = txtIdCLiente.getText().trim();
        String s_nombre = txtNombreCliente.getText().trim();
        String s_gmail = txtCorreo.getText().trim();
        String s_direccion = txtDireccion.getText().trim();
        String s_telefono = txtTelefono.getText().trim();

        // Actualizar los valores en el modelo de la tabla
        clienteAdapter.updateCliente(filaSeleccionada, s_id, s_nombre, s_gmail, s_direccion, s_telefono);

        // Realizar la actualización en la base de datos
        String sql = "UPDATE registro_clientes SET NOMBRE = ?, GMAIL = ?, DIRECCION = ?, TELEFONO = ? WHERE ID = ?";
        try (Connection con = Singleton.getInstance().getConnection(); 
             PreparedStatement pst = con.prepareStatement(sql)) {

            // Establecer los valores en la consulta SQL
            pst.setString(1, s_nombre);
            pst.setString(2, s_gmail);
            pst.setString(3, s_direccion);
            pst.setString(4, s_telefono);
            pst.setString(5, s_id);

            // Ejecutar la consulta
            int filasActualizadas = pst.executeUpdate();
            if (filasActualizadas > 0) {
                JOptionPane.showMessageDialog(this, "Registro editado correctamente en la base de datos.");
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo editar el registro en la base de datos.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al editar en la base de datos: " + e.getMessage());
        }

        // Ordenar después de editar
        ordenarTablaPorID();
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila para editar.");
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        //Es para salir del formulario e ir a otro, todo centrado y que se elimine este
        MENU_PRICIPAL mMENU_PRICIPAL = new MENU_PRICIPAL();
        mMENU_PRICIPAL.setVisible(true);
        mMENU_PRICIPAL.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoClienteActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoClienteActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    // Declarar variables para los campos de texto
    String s_id = txtIdCLiente.getText().trim();
    String s_nombre = txtNombreCliente.getText().trim();
    String s_gmail = txtCorreo.getText().trim();
    String s_direccion = txtDireccion.getText().trim();
    String s_telefono = txtTelefono.getText().trim();

    // Verificar duplicados
    if (s_idsClientes.contains(s_id)) {
        JOptionPane.showMessageDialog(this, "El ID ya está registrado. Por favor, ingrese uno diferente.");
        return;
    }

    if (s_correosClientes.contains(s_gmail)) {
        JOptionPane.showMessageDialog(this, "El correo electrónico ya está registrado. Por favor, ingrese uno diferente.");
        return;
    }

    if (s_telefonoSet.contains(s_telefono)) {
        JOptionPane.showMessageDialog(this, "El teléfono ya está registrado. Por favor, ingrese uno diferente.");
        return;
    }

    // Validar que los campos no estén vacíos
    if (s_id.isEmpty() || s_nombre.isEmpty() || s_gmail.isEmpty() || s_direccion.isEmpty() || s_telefono.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
    } else {
        // Agregar una nueva fila a la tabla si todo está correcto
        clienteAdapter.addCliente(s_id, s_nombre, s_gmail, s_direccion, s_telefono);

        // Agregar a los conjuntos para evitar duplicados
        s_idsClientes.add(s_id);
        s_correosClientes.add(s_gmail);
        s_telefonoSet.add(s_telefono);

        // Guardar los datos en la base de datos
        String sql = "INSERT INTO registro_clientes (ID, NOMBRE, GMAIL, DIRECCION, TELEFONO) VALUES (?, ?, ?, ?, ?)";
        try (Connection con = Singleton.getInstance().getConnection(); 
             PreparedStatement pst = con.prepareStatement(sql)) {
             
            pst.setString(1, s_id);
            pst.setString(2, s_nombre);
            pst.setString(3, s_gmail);
            pst.setString(4, s_direccion);
            pst.setString(5, s_telefono);

            int filasInsertadas = pst.executeUpdate();
            if (filasInsertadas > 0) {
                JOptionPane.showMessageDialog(this, "Cliente agregado correctamente a la base de datos.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar en la base de datos: " + e.getMessage());
        }

        // Llamada al método para ordenar la tabla tras agregar el nuevo registro
        ordenarTablaPorID();
    }
    }//GEN-LAST:event_btnAgregarActionPerformed
// Método para ordenar la tabla por ID en orden ascendente
    private void ordenarTablaPorID() {
        List<Object[]> filas = new ArrayList<>();
// Recorrer el modelo de la tabla y añadir filas con ID no nulo o no vacío a la lista
    for (int i = 0; i < model.getRowCount(); i++) {
        Object idValue = model.getValueAt(i, 0);
        
        // Validar que el ID no sea nulo ni vacío antes de agregar la fila
        if (idValue != null && !idValue.toString().trim().isEmpty()) {
            Object[] fila = new Object[model.getColumnCount()];
            for (int j = 0; j < model.getColumnCount(); j++) {
                fila[j] = model.getValueAt(i, j);
            }
            filas.add(fila);
        }
    }

        // Ordenar la lista de filas por la columna del ID (primera columna)
        filas.sort(Comparator.comparingInt(f -> Integer.parseInt(f[0].toString())));

        // Limpiar el modelo y añadir las filas ordenadas
        model.setRowCount(0);
        for (Object[] fila : filas) {
            model.addRow(fila);
        }
    }
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

        if (validarIDCliente(txtIdCLiente.getText().trim()) && validarNombreDelCliente(txtNombreCliente.getText().trim()) && validarCorreo(txtCorreo.getText().trim()) && validarDireccion(txtDireccion.getText().trim()) && validarTelefono(txtTelefono.getText().trim())) {
            //No se necesita mucho codigo porque con la palabra this hace referencia al contexto actual
            JOptionPane.showMessageDialog(this, "Cliente registrado con éxito.");
        } else {
            JOptionPane.showMessageDialog(this, "Debe insertar datos correctos");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    public static boolean validarIDCliente(String datos) {
        return datos.matches("^\\d{1,5}$");
    }

    public static boolean validarNombreDelCliente(String datos) {
        return datos.matches("^[a-zA-ZÀ-ÿ\\s]{3,50}$");
    }

    public static boolean validarCorreo(String datos) {
        return datos.matches("^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,6}$");
    }

    public static boolean validarDireccion(String datos) {
        return datos.matches("^[a-zA-Z0-9À-ÿ\\s,.-]{5,100}$");
    }

    public static boolean validarTelefono(String datos) {
        return datos.matches("^\\d{9}$");
    }


    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Seleccionar la fila que se desea eliminar
    int filaSeleccionada = TablaDeRegistro.getSelectedRow();

    if (filaSeleccionada >= 0) {
        // Obtener el ID de la fila seleccionada
        String id = model.getValueAt(filaSeleccionada, 0).toString();
        String correo = model.getValueAt(filaSeleccionada, 2).toString();
        String telefono = model.getValueAt(filaSeleccionada, 4).toString();

        // Confirmar la eliminación
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar este registro?", 
                                                          "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            // Eliminar el registro de la tabla en la interfaz gráfica
            clienteAdapter.removeCliente(filaSeleccionada);

            // Eliminar del TreeSet
            s_idsClientes.remove(id);
            s_correosClientes.remove(correo);
            s_telefonoSet.remove(telefono);

            // Realizar la eliminación en la base de datos
            String sql = "DELETE FROM registro_clientes WHERE ID = ?";
            try (Connection con = Singleton.getInstance().getConnection(); 
                 PreparedStatement pst = con.prepareStatement(sql)) {

                // Establecer el valor del ID en la consulta
                pst.setString(1, id);

                // Ejecutar la consulta
                int filasEliminadas = pst.executeUpdate();
                if (filasEliminadas > 0) {
                    JOptionPane.showMessageDialog(this, "Registro eliminado correctamente de la base de datos.");
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar en la base de datos: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila para eliminar.");
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseEntered
        btnSalir.setBackground(new Color(255, 153, 153));
    }//GEN-LAST:event_btnSalirMouseEntered

    private void btnSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseExited
        btnSalir.setBackground(Color.gray);
    }//GEN-LAST:event_btnSalirMouseExited

    private void btnNuevoClienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoClienteMouseEntered
        btnNuevoCliente.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnNuevoClienteMouseEntered

    private void btnRegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseEntered
        btnRegistrar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnRegistrarMouseEntered

    private void btnAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseEntered
        btnAgregar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnAgregarMouseEntered

    private void btnEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseEntered
        btnEditar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnEditarMouseEntered

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setBackground(new Color(255, 169, 40));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnNuevoClienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoClienteMouseExited
        btnNuevoCliente.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnNuevoClienteMouseExited

    private void btnRegistrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseExited
        btnRegistrar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnRegistrarMouseExited

    private void btnAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseExited
        btnAgregar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnAgregarMouseExited

    private void btnEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseExited
        btnEditar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnEditarMouseExited

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_btnEliminarMouseExited

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    void ConsultarCliente() {
        String sql = "select * from registro_clientes";
        
       try {
           // Obtener la conexión utilizando el Singleton
        conet = Singleton.getInstance().getConnection();
        
        // Crear el Statement y ejecutar la consulta
        st = conet.createStatement();
        rs = st.executeQuery(sql);
        
        // Crear un arreglo para almacenar los datos de cada empleado
        Object[] registro_clientes = new Object[5];
        
        // Iterar sobre los resultados y agregar los datos a la tabla
        while (rs.next()) {
            registro_clientes[0] = rs.getInt("ID");
            registro_clientes[1] = rs.getString("NOMBRE");
            registro_clientes[2] = rs.getString("GMAIL");
            registro_clientes[3] = rs.getString("DIRECCION");
            registro_clientes[4] = rs.getInt("TELEFONO");
            
            model.addRow(registro_clientes);
        }
        
        // Asignar el modelo a la tabla
        TablaDeRegistro.setModel(model);
        
    } catch (Exception e) {
        // Mostrar el mensaje de error si algo falla
        JOptionPane.showMessageDialog(this, "Error al consultar datos: " + e.getMessage());
    }
    }

    private void limpiarCampos() {
        //Limpiar textos
        txtIdCLiente.setText("");
        txtNombreCliente.setText("");
        txtCorreo.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(REGISTRO_CLIENTES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(REGISTRO_CLIENTES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(REGISTRO_CLIENTES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(REGISTRO_CLIENTES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new REGISTRO_CLIENTES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaDeRegistro;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevoCliente;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdCLiente;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
